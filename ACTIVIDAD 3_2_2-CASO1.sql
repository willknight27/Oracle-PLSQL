/*PKG ESPECIFICACION*/
CREATE OR REPLACE PACKAGE PKG_NO_PAGO_GC IS
--VARIABLE ANNO/MES PROCESO
V_ANNO_MES_PROCESO NUMBER(6) := 202105;
--VARIABLE UF
V_UF NUMBER(5) := 29509;
--FUNCION: OBTENER EL NOMBRE DEL ADMINISTRADOR
FUNCTION FN_OBT_NOMBRE_ADMIN(P_RUN_ADMIN NUMBER) RETURN VARCHAR2;
--FUNCION: OBTENER EL NOMBRE DEL RESPONSABLE DE LOS PAGOS DE GC
FUNCTION FN_OBT_NOMBRE_RESPONSABLEGC(P_RUN_RGC NUMBER) RETURN VARCHAR2;
--FUNCION: OBTENER NOMBRE DEL EDIFICIO
FUNCTION FN_OBT_NOMBRE_EDIFCIO(P_ID_EDIF NUMBER) RETURN VARCHAR2;
--PROCEDIMIENTO: ALMACENA INFORMACION A LA TABLA GASTO_COMUN_PAGO_CERO
PROCEDURE SP_GUARDAR_GC_PAGO_CERO(P_ANNO_MES_PCGC NUMBER,P_ID_EDIF NUMBER, P_NOMBRE_EDIF VARCHAR2,
                                  P_RUN_ADMINISTRADOR VARCHAR2, P_NOMBRE_ADMNISTRADOR VARCHAR2,
                                  P_NRO_DEPTO NUMBER, P_RUN_RESPONSABLE_PAGO_GC VARCHAR2,
                                  P_NOMBRE_RESPONSABLE_PAGO_GC VARCHAR2, P_VALOR_MULTA_PAGO_CERO NUMBER,
                                  P_OBSERVACION VARCHAR2);
--PROCEDIMIENTO: SP PRINCIPAL QUE GENERA LA INFO PARA LOS GC CON PAGO CERO
PROCEDURE SP_GENERA_INFO_GC_PAGO_CERO(P_ANNO_MES_PROCESO NUMBER,P_UF NUMBER);
END PKG_NO_PAGO_GC;

/*PKG BODY*/
CREATE OR REPLACE PACKAGE BODY PKG_NO_PAGO_GC IS

    FUNCTION FN_OBT_NOMBRE_ADMIN(P_RUN_ADMIN NUMBER) RETURN VARCHAR2
    IS
    /*FUNCION QUE RETORNA EL NOMBRE COMPLETO DEL ADMINISTRADOR DE ACUERDO A SU RUN*/
    V_NOM_COMPLETO_ADMIN VARCHAR2(50);
    BEGIN
        SELECT PNOMBRE_ADM||' '||SNOMBRE_ADM||' '||APPATERNO_ADM||' '||APMATERNO_ADM
        INTO V_NOM_COMPLETO_ADMIN
        FROM ADMINISTRADOR
        WHERE NUMRUN_ADM = P_RUN_ADMIN;
        RETURN V_NOM_COMPLETO_ADMIN;
    END FN_OBT_NOMBRE_ADMIN;
    ----------------------------------------------------------------------------
    ----------------------------------------------------------------------------
    FUNCTION FN_OBT_NOMBRE_RESPONSABLEGC(P_RUN_RGC NUMBER) RETURN VARCHAR2
    IS
    /*FUNCION QUE RETORNA EL NOMBRE COMPLETO DEL RESPONABLE DEL PAGO DE GC DE
    ACUERDO A SU RUN*/
    V_NOM_COMPLETO_RGC VARCHAR2(50);
    BEGIN
        SELECT PNOMBRE_RPGC||' '||SNOMBRE_RPGC||' '||APPATERNO_RPGC||' '||APMATERNO_RPGC
        INTO V_NOM_COMPLETO_RGC
        FROM RESPONSABLE_PAGO_GASTO_COMUN
        WHERE NUMRUN_RPGC = P_RUN_RGC;
        RETURN V_NOM_COMPLETO_RGC;
    END FN_OBT_NOMBRE_RESPONSABLEGC;
    ----------------------------------------------------------------------------
    ----------------------------------------------------------------------------
    FUNCTION FN_OBT_NOMBRE_EDIFCIO(P_ID_EDIF NUMBER) RETURN VARCHAR2
    IS
    /*FUNCION QUE RETORNA EL NOMBRE DEL EDIFICIO DE ACUERDO A SU ID*/
    V_NOMBRE_EDIFICIO VARCHAR2(50);
    BEGIN
        SELECT NOMBRE_EDIF
        INTO V_NOMBRE_EDIFICIO
        FROM EDIFICIO
        WHERE ID_EDIF = P_ID_EDIF;
        RETURN V_NOMBRE_EDIFICIO;
    END FN_OBT_NOMBRE_EDIFCIO;
    ----------------------------------------------------------------------------
    ----------------------------------------------------------------------------
    PROCEDURE SP_GUARDAR_GC_PAGO_CERO(P_ANNO_MES_PCGC NUMBER,P_ID_EDIF NUMBER, P_NOMBRE_EDIF VARCHAR2,
                                  P_RUN_ADMINISTRADOR VARCHAR2, P_NOMBRE_ADMNISTRADOR VARCHAR2,
                                  P_NRO_DEPTO NUMBER, P_RUN_RESPONSABLE_PAGO_GC VARCHAR2,
                                  P_NOMBRE_RESPONSABLE_PAGO_GC VARCHAR2, P_VALOR_MULTA_PAGO_CERO NUMBER,
                                  P_OBSERVACION VARCHAR2)
    /*PROCEDIMIENTO QUE INSERTA DATOS EN LA TABLA GASTO_COMUN_PAGO_CERO DE LOS DEPTOS QUE NO HAN
    PAGADO GASTOS COMUNES*/
    IS
    BEGIN
        INSERT INTO GASTO_COMUN_PAGO_CERO VALUES(P_ANNO_MES_PCGC,P_ID_EDIF,P_NOMBRE_EDIF,P_RUN_ADMINISTRADOR,P_NOMBRE_ADMNISTRADOR,
                                                 P_NRO_DEPTO,P_RUN_RESPONSABLE_PAGO_GC,P_NOMBRE_RESPONSABLE_PAGO_GC,P_VALOR_MULTA_PAGO_CERO,
                                                 P_OBSERVACION);
        COMMIT;
    END SP_GUARDAR_GC_PAGO_CERO;
    ----------------------------------------------------------------------------
    ----------------------------------------------------------------------------
    
    PROCEDURE SP_GENERA_INFO_GC_PAGO_CERO(P_ANNO_MES_PROCESO NUMBER,P_UF NUMBER)
    /*PROCEDIMIENTO PRINCIPAL QUE NOS PERMITE GENERAR LOS DEPTOS QUE NO HAN PAGADO
     HASTA 2 PERIODOS DE GASTOS COMUNES.*/
    IS
    V_OBSERVACION GASTO_COMUN_PAGO_CERO.OBSERVACION%TYPE;
        CURSOR C_DEPTOS_NO_PAGO IS
        SELECT
            E.ID_EDIF,
            PKG_NO_PAGO_GC.FN_OBT_NOMBRE_EDIFCIO(E.ID_EDIF) AS NOMBRE_EDIF,
            TO_CHAR(A.NUMRUN_ADM,'99G999G999')||'-'||A.DVRUN_ADM AS RUN_ADMIN,
            PKG_NO_PAGO_GC.FN_OBT_NOMBRE_ADMIN(A.NUMRUN_ADM) AS NOMBRE_ADMIN,
            D.NRO_DEPTO,
            TO_CHAR(RPGC.NUMRUN_RPGC,'99G999G999')||'-'||RPGC.DVRUN_RPGC AS RUN_RPGC,
            PKG_NO_PAGO_GC.FN_OBT_NOMBRE_RESPONSABLEGC(RPGC.NUMRUN_RPGC) AS NOMBRE,
            G.FECHA_PAGO_GC
        FROM EDIFICIO E
                    JOIN ADMINISTRADOR A ON E.NUMRUN_ADM = A.NUMRUN_ADM
                    JOIN DEPARTAMENTO D ON E.ID_EDIF = D.ID_EDIF
                    JOIN GASTO_COMUN G ON D.ID_EDIF = G.ID_EDIF AND  D.NRO_DEPTO = G.NRO_DEPTO
                    JOIN RESPONSABLE_PAGO_GASTO_COMUN RPGC ON G.NUMRUN_RPGC = RPGC.NUMRUN_RPGC

        AND G.ANNO_MES_PCGC = P_ANNO_MES_PROCESO
        ORDER BY NOMBRE_EDIF,D.NRO_DEPTO;
        
        V_NO_PAGA_UN_MES NUMBER(6);
        V_NO_PAGA_DOS_MESES NUMBER(6);
        V_MULTA NUMBER(8);
    BEGIN
    
    FOR  R_DEPTOS_NO_PAGO IN C_DEPTOS_NO_PAGO LOOP
        
        --NO PAGO GASTO COMUN DEL MES ANTERIOR
        SELECT COUNT(*)
        INTO V_NO_PAGA_UN_MES
        FROM PAGO_GASTO_COMUN
        WHERE ANNO_MES_PCGC = P_ANNO_MES_PROCESO-1 AND ID_EDIF = R_DEPTOS_NO_PAGO.ID_EDIF AND NRO_DEPTO = R_DEPTOS_NO_PAGO.NRO_DEPTO;
        
        --SI V_NO_PAGA_UN_MES ES IGUAL A CERO -> ESE DEPTO NO HA PAGADO EL GASTO COMUN CORRESPONDIENTE AL PERIODO ANTERIOR(ABRIL)
        --AL QUE SE ESTA PROCESANDO Y HACEMOS OTRO SELECT COUNT PARA SABER SI TAMPOCO PAGO EL ANTERIOR(MARZO)
        IF V_NO_PAGA_UN_MES = 0 THEN
            
            SELECT COUNT(*)
            INTO V_NO_PAGA_DOS_MESES
            FROM PAGO_GASTO_COMUN
            WHERE ANNO_MES_PCGC = P_ANNO_MES_PROCESO-2 AND ID_EDIF = R_DEPTOS_NO_PAGO.ID_EDIF AND NRO_DEPTO = R_DEPTOS_NO_PAGO.NRO_DEPTO;
            
            IF V_NO_PAGA_DOS_MESES > 0 THEN
               V_MULTA :=  P_UF*4;
               V_OBSERVACION := 'Se realizará el corte de combustible y agua a contar del '||R_DEPTOS_NO_PAGO.FECHA_PAGO_GC;
            ELSE
                V_MULTA :=  P_UF*2;
                 V_OBSERVACION := 'Se realizará el corte de combustible y agua';
            END IF;
            
            SP_GUARDAR_GC_PAGO_CERO(P_ANNO_MES_PROCESO,
                                  R_DEPTOS_NO_PAGO.ID_EDIF, R_DEPTOS_NO_PAGO.NOMBRE_EDIF,
                                  R_DEPTOS_NO_PAGO.RUN_ADMIN, R_DEPTOS_NO_PAGO.NOMBRE_ADMIN,
                                  R_DEPTOS_NO_PAGO.NRO_DEPTO, R_DEPTOS_NO_PAGO.RUN_RPGC,
                                  R_DEPTOS_NO_PAGO.NOMBRE, V_MULTA,V_OBSERVACION);
            UPDATE GASTO_COMUN
                SET MULTA_GC = V_MULTA
                WHERE ANNO_MES_PCGC = P_ANNO_MES_PROCESO
                AND ID_EDIF = R_DEPTOS_NO_PAGO.ID_EDIF
                AND NRO_DEPTO = R_DEPTOS_NO_PAGO.NRO_DEPTO;
        END IF;
        
    END LOOP;
    
    END SP_GENERA_INFO_GC_PAGO_CERO;
    
END PKG_NO_PAGO_GC;
/


--PROBANDO FUNCIONES Y PROCEDIMIENTOS
SELECT
NUMRUN_ADM, PKG_NO_PAGO_GC.FN_OBT_NOMBRE_ADMIN(NUMRUN_ADM)
FROM ADMINISTRADOR;

SELECT NUMRUN_RPGC,PKG_NO_PAGO_GC.FN_OBT_NOMBRE_RESPONSABLEGC(NUMRUN_RPGC)
FROM RESPONSABLE_PAGO_GASTO_COMUN;

SELECT * FROM GASTO_COMUN_PAGO_CERO;
/
EXEC PKG_NO_PAGO_GC.SP_GENERA_INFO_GC_PAGO_CERO(202105,29509);